<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" 
						"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">
<mapper namespace="kr.kro.bbanggil.bakery.mapper.BakeryMapper">

	<resultMap id="bakeryInfoResultMap"
		type="kr.kro.bbanggil.bakery.dto.response.bakeryUpdateResponseDTO">
		<result property="bakeryNo" column="bakery_no"></result>
		<result property="bakeryName" column="bakery_name"></result>
		<result property="bakeryPhone" column="bakery_phone"></result>
		<result property="bakeryAddress" column="bakery_address"></result>
		<result property="createdDate" column="created_date"></result>
		<result property="insideInfo" column="inside_info"></result>
		<result property="outsideInfo" column="outside_info"></result>
		<result property="parkingInfo" column="amenity"></result>
	</resultMap>

	<resultMap id="bakeryImgResultMap"
		type="kr.kro.bbanggil.bakery.dto.request.FileRequestDTO">
		<result property="changeName" column="change_name"></result>
		<result property="folderNamePath" column="folder_name_path"></result>
	</resultMap>

	<resultMap id="bakeryScheduleResultMap"
		type="kr.kro.bbanggil.bakery.dto.BakeryTimeSetDTO">
		<result property="day" column="day"></result>
		<result property="start" column="open_time"></result>
		<result property="end" column="close_time"></result>
	</resultMap>

		<select id="getBakeryInfo" resultMap="bakeryInfoResultMap">
			SELECT bi.BAKERY_NO,
			bi.BAKERY_NAME,
			bi.BAKERY_ADDRESS,
			bi.BAKERY_PHONE,
			bd.AMENITY,
			bd.INSIDE_INFO,
			bd.OUTSIDE_INFO,
			bd.CREATED_DATE
			FROM BAKERY_INFO bi
			JOIN BAKERY_DETAIL bd ON bi.BAKERY_NO = bd.BAKERY_NO
			WHERE
			bi.bakery_no =
			${bakeryNo}
		</select>
		
		<select id="getBakeryImg" resultMap="bakeryImgResultMap">
			SELECT CHANGE_NAME,
			FOLDER_NAME_PATH
			FROM BAKERY_IMAGE bi
			WHERE bakery_no = ${bakeryNo}
		</select>

		<select id="getBakerySchedule"
			resultMap="bakeryScheduleResultMap">
			SELECT day,open_time,close_time
			FROM BAKERY_SCHEDULE bs
			WHERE bakery_no =${bakeryNo}
		</select>

		<insert id="menuInsert">
			<selectKey resultType="int" keyProperty="menuRequestDTO.menuNo"
				order="BEFORE">
				SELECT menu_seq.nextval from dual
			</selectKey>
			INSERT INTO menu VALUES(#{menuRequestDTO.menuNo},
			#{menuRequestDTO.menuName},
			#{menuRequestDTO.menuPrice},
			#{menuRequestDTO.menuPopulity},
			#{bakeryNo},
			#{menuRequestDTO.menuCategory})
		</insert>
		<insert id="menuFileUpload">
			INSERT INTO menu_imege
			VALUES(menu_img_seq.nextval,
			#{fileDTO.changeName},
			#{fileDTO.originalName},
			#{fileDTO.extension},
			#{fileDTO.size},
			#{fileDTO.localPath},
			#{fileDTO.localResourcePath},
			#{fileDTO.folderNamePath},
			#{menuNo})
		</insert>
		
		<insert id="imgInsert">
			INSERT INTO menu_imege
			VALUES(menu_img_seq.nextval,
			#{changeName},
			#{originalName},
			#{extension},
			#{size},
			#{localPath},
			#{localResourcePath},
			#{folderNamePath},
			56)
		</insert>



		<select id="getCategory">
			SELECT category_no AS categoryNo,
			category
			FROM
			menu_category
		</select>
		<select id="getMenuList">
			SELECT m.menu_no AS menuNo,
				   menu_name AS menuName,
				   MENU_PRICE AS menuPrice,
				   MENU_INFO AS menuInfo,
				   CATEGORY AS category,
				   CHANGE_NAME AS changeName,
	   			   RESOURCES_PATH AS resourcesPath
			FROM MENU m 
			JOIN MENU_CATEGORY mc ON m.CATEGORY_NO = mc.CATEGORY_NO
			JOIN MENU_IMEGE mi ON m.MENU_NO = mi.MENU_NO 
			WHERE BAKERY_NO = ${bakeryNo}
			ORDER BY m.menu_no DESC
		</select>
		<select id="getBakeryName">
			SELECT bakery_Name AS bakeryName 
			from bakery_Info
			where bakery_no = ${bakeryNo}
		</select>
		<select id="getMenuImgInfo" resultType="String">
			SELECT change_name FROM menu_imege
			WHERE menu_no = ${menuNo}
		</select>
		<select id="getMenuImg">
			SELECT change_name AS changeName,
				   resources_path AS resourcesPath
			FROM menu_imege
			WHERE menu_no=${menuNo}
		</select>
		<update id="menuUpdate">
			UPDATE menu
			SET menu_name = #{menuName},
				menu_price = #{menuPrice},
				menu_Info = #{menuPopulity},
				category_no = #{menuCategory}
			WHERE menu_no = #{menuNo}
		</update>
		<delete id="menuDelete">
			DELETE FROM menu
			where menu_no = #{menuNo}
		</delete>
		<delete id="deleteMenuImg">
			DELETE FROM menu_imege
			where change_name = #{changeName}
		</delete>
		<select id="getMenuUpdate">
			SELECT menu_name AS menuName,
				   menu_price AS menuPrice,
				   menu_info AS populity,
				   change_name AS changeName,
				   resources_path AS resourcesPath,
				   category
			FROM MENU m
			JOIN MENU_IMEGE mi ON m.MENU_NO = mi.MENU_NO
			JOIN MENU_CATEGORY mc ON mc.CATEGORY_NO = m.CATEGORY_NO
			WHERE m.menu_no = ${menuNo}
		</select>
		<select id="bakeryInfo" >
			SELECT bi.BAKERY_NAME AS bakeryName,
				   bi.BAKERY_ADDRESS AS bakeryAddress,
				   bi.BAKERY_PHONE AS bakeryPhone,
				   bd.INSIDE_INFO AS insideInfo,
				   bd.OUTSIDE_INFO AS outsideInfo,
				   bd.AMENITY AS parkingInfo,
				   ba.AGREE,
				   ba.reject
			FROM BAKERY_INFO bi
			JOIN BAKERY_DETAIL bd ON bi.BAKERY_NO = bd.BAKERY_NO
			JOIN BAKERY_ACCESS ba ON bi.BAKERY_NO = ba.BAKERY_NO
			WHERE bi.BAKERY_NO = ${bakeryNo}	
		</select>

		<insert id="bakeryFileUpload">
			INSERT INTO bakery_Image
			VALUES(img_seq.nextval,
			#{fileDTO.changeName},
			#{fileDTO.originalName},
			#{fileDTO.extension},
			#{fileDTO.size},
			#{fileDTO.localPath},
			#{fileDTO.localResourcePath},
			#{fileDTO.folderNamePath},
			#{imgLocation},
			#{bakeryNo},
			'')
		</insert>
		<insert id="bakeryInsert">
			<selectKey resultType="int" keyProperty="bakeryNo"
				order="BEFORE">
				SELECT bakery_seq.nextval from dual
			</selectKey>
			INSERT INTO bakery_info
			VALUES(#{bakeryNo},
			#{bakeryName},
			#{bakeryAddress},
			#{bakeryPhone},
			#{latitude},
			#{longitude},
			#{region})
		</insert>
		<insert id="bakeryDetailInsert">
			INSERT INTO bakery_detail
			VALUES(#{bakeryNo},
			#{amenity},
			#{insideInfo},
			#{outsideInfo},
			#{createdDate},
			sysdate)
		</insert>
		<insert id="bakeryScheduleInsert">
			INSERT INTO bakery_schedule
			VALUES(schedule_seq.nextval,
			#{bakeryNo},
			#{timeDTO.day},
			#{timeDTO.start},
			#{timeDTO.end})
		</insert>
		<insert id="setBakery">
			INSERT INTO bakery_access
			VALUES(#{bakeryNo},
			'대기',
			#{userNo},
			'',
			'')
		</insert>
		<insert id="UserCountInsert">
			INSERT INTO user_count
			values(#{bakeryNo},0,0)
		</insert>
		<update id="resetDailyVisitCount">
        UPDATE user_count
        SET total_visit = total_visit + user_count,
            user_count = 0
    	</update>
		<select id="requestUserNo">
			SELECT user_no FROM BAKERY_INFO bi
			JOIN BAKERY_ACCESS
			ba ON bi.BAKERY_NO = ba.BAKERY_NO
			WHERE ba.BAKERY_NO = ${bakeryNo}
		</select>
		<select id="getFileInfo">
			SELECT change_name AS changeName,
			local_path AS
			localPath
			FROM bakery_image
			WHERE 'position' = '${imgLocation}'
		</select>
		<delete id="deleteFile">
			DELETE FROM bakery_image
			where change_name =
			${fileName}
		</delete>

		<update id="bakeryUpdate">
			UPDATE bakery_info
			SET bakery_name = #{bakeryName},
			bakery_address = #{bakeryAddress},
			bakery_phone = #{bakeryPhone}
			WHERE
			bakery_no = #{bakeryNo}
		</update>
		<update id="bakeryDetailUpdate">
			UPDATE bakery_detail
			set amenity = #{parkingInfo},
			inside_info = #{insideInfo},
			outside_info = #{outsideInfo}
			WHERE
			bakery_no = #{bakeryNo}
		</update>
		<update id="bakeryScheduleUpdate">
			UPDATE bakery_Schedule
			set open_time =
			#{timeDTO.start},
			close_time= #{timeDTO.end}
			WHERE bakery_no =
			#{bakeryNo}
			AND day = #{timeDTO.day}
		</update>
		<update id="bakeryAccessUpdate">
			UPDATE bakery_Access
			SET agree = '대기'
			WHERE bakery_no
			=
			#{bakeryNo}
		</update>


		<select id="getBakeriesByRegion">

			SELECT
			*
			FROM
			BAKERY_INFO bi
			WHERE
			region LIKE '%' ||
			#{region} || '%'

		</select>
		
		<select id="getUserCountBybakeryNo" resultType="int">
			SELECT user_count FROM user_count
			WHERE bakery_no =${bakeryNo}
		</select>
		
		
		<update id="updateUserCount">
			UPDATE user_count
			SET user_count = ${count}
			where bakery_no = ${bakeryNo}
		</update>
</mapper>