<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">
<mapper namespace="kr.kro.bbanggil.owner.pickup.mapper.PickupMapper">

	<resultMap id="pickupResultMap"
		type="kr.kro.bbanggil.owner.pickup.response.dto.PickupBakeryInfoResponseDTO">
		<result property="bakeryNo" column="bakery_no"></result>

		
		<association property="payDTO" javaType="kr.kro.bbanggil.owner.pickup.response.dto.PickupPaymentResponseDTO">
			<result property="orderNo" column="order_no"></result>
			<result property="requestContent" column="request_content"></result>
			<result property="paymentDate" column="pay_request_date"></result>
			<result property="amount" column="amount"></result>
		</association>
		
		<association property="statusDTO" javaType="kr.kro.bbanggil.owner.pickup.response.dto.PickupStatusResponseDTO">
			<result property="pickupStatus" column="pickup_status"></result>
			<result property="rejectionReason" column="refusal_detail"></result>
		</association>
		
		<association property="userDTO" javaType="kr.kro.bbanggil.owner.pickup.response.dto.PickupUserInfoResponseDTO">
			<result property="userNo" column="user_no"></result>
			<result property="recipientsPhonenum" column="recipients_phonenum"></result>
		</association>
		
		<association property="menuDTO" javaType="kr.kro.bbanggil.owner.pickup.response.dto.PickupMenuResponseDTO">
			<result property="menuName" column="menu_name"></result>
			<result property="menuCount" column="menu_count"></result>
			<result property="price" column="menu_price"></result>
		</association>
		
	</resultMap>
	
	<select id="getBakeryNoByUserNo" 
	        resultType="java.lang.Integer" 
	        parameterType="int">
	    SELECT bakery_no 
	    FROM bakery_access 
	    WHERE user_no = #{userNo}
	</select>
	
	<select id="findAllOrders" resultMap="pickupResultMap" parameterType="int">
		SELECT 
			oi.order_no,
			ps.pickup_status,
			p.pay_request_date,
			p.amount,
			p.recipients_phonenum,
			ba.bakery_no AS bakery,
			p.request_content,
			c.cart_no,
			ba.bakery_no,
			m.menu_name,
			ci.menu_no,
			ci.menu_count,
			ba.user_no
		FROM
			ORDER_INFO oi
		JOIN 
			PAYMENT p ON oi.pay_no = p.pay_no
		JOIN
			PICKUP_STATUS ps ON p.pay_no = ps.pay_no
		JOIN
			CART c ON oi.cart_no = c.cart_no
		JOIN
			CART_INFO ci ON c.cart_no = ci.cart_no
		JOIN
			menu m ON ci.menu_no = m.menu_no
		JOIN
			bakery_info bi ON bi.bakery_no = m.bakery_no
		JOIN
			bakery_access ba ON bi.bakery_no = ba.bakery_no
		WHERE bi.bakery_no = #{bakeryNo}
        ORDER BY pay_request_date DESC
	</select>
	
	<!-- 상태와 거절 사유를 업데이트 -->
    <update id="updateStatusAndRejectionReason">
        UPDATE pickup_status ps
		SET ps.pickup_status = #{status},
		    ps.refusal_detail = #{rejectionReason}
		WHERE ps.pay_no IN (
		    SELECT p.pay_no
		    FROM payment p
		    JOIN order_info oi ON p.pay_no = oi.pay_no
		    WHERE oi.order_no = #{orderNo}
		)
    </update>

    <!-- 상태만 업데이트 -->
    <update id="updateStatus">
        UPDATE pickup_status ps
		SET ps.pickup_status = #{status}
		WHERE ps.pay_no IN (
		    SELECT p.pay_no
		    FROM payment p
		    JOIN order_info oi ON p.pay_no = oi.pay_no
		    WHERE oi.order_no = #{orderNo}
		)
    </update>
	

	

	
</mapper>