<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
						 "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">
<mapper namespace="kr.kro.bbanggil.bakery.mapper.BakeryMapper">

<resultMap id="BakeryResultMap" type="kr.kro.bbanggil.bakery.dto.BakeryDto">
 		<result property="no" column="bakery_no"></result>
        <result property="name" column="bakery_name"></result>
        <result property="latitude" column="latitude"></result>
        <result property="longitude" column="longitude"></result>
        <result property="region" column="region"></result>
        <result property="address" column="bakery_address"></result>
        <result property="phone" column="bakery_phone"></result>
        
        
        <association property="review" javaType="kr.kro.bbanggil.bakery.response.dto.BakeryResponseReviewDto">
         <result property="reviewRating" column="review_rating"></result>
        </association>
        
        
        <association property="detail" javaType="kr.kro.bbanggil.bakery.response.dto.BakeryResponseBakeryDetailDto">
         <result property="createDate" column="created_date"></result>
        </association>
        
         <association property="cart" javaType="kr.kro.bbanggil.bakery.response.dto.BakeryResponseCartDto">
         <result property="totalCount" column="bakery_count"></result>
        </association>
        
        
       <association property="menu" javaType="kr.kro.bbanggil.bakery.response.dto.BakeryResponseMenuDto">
       <result property="menuNo" column="menu_no"></result>
       <result property="menuName" column="menu_name"></result>
       <result property="menuPrice" column="menu_price"></result>
       <result property="menuInfo" column="menu_info"></result>
       <result property="categoryName" column="category_no"></result>
       <result property="category" column="category"></result>
       </association>
        
       <association property="image" javaType="kr.kro.bbanggil.bakery.response.dto.BakeryResponseImageDto">
       <result property="imgNo" column="img_no"></result>
       <result property="changeName" column="change_name"></result>
       <result property="resourcesPath" column="resources_path"></result>
       </association> 
        
        
</resultMap>


<insert id="insertBakery" parameterType="kr.kro.bbanggil.bakery.dto.BakeryDto"> 
	<selectKey keyProperty="no" resultType="double" order="AFTER">
	  SELECT bakery_seq.nextval FROM dual
	
	</selectKey>
		INSERT INTO bakery_info(bakery_no,bakery_name,bakery_address,bakery_phone,latitude,longitude,region)
		VALUES(bakery_seq.nextval,#{name},#{address},#{phone},#{latitude},#{longitude},#{region})

</insert>

<select id="getBakeriesByRegion" resultMap="BakeryResultMap" parameterType="string" >

		SELECT *
		FROM bakery_info
		WHERE region = #{region}
</select>

<select id="getPopularBakeries" resultMap="BakeryResultMap">

 SELECT 
    bi.BAKERY_NAME,
    bi.BAKERY_ADDRESS,
    m.MENU_NAME,
    TO_CHAR(m.MENU_INFO) AS MENU_INFO,  
    BI2.IMG_NO,
    BI2.RESOURCES_PATH,
    BI2.CHANGE_NAME,
    AVG(r.REVIEW_RATING) as review_rating
FROM BAKERY_INFO bi 
JOIN MENU m ON M.BAKERY_NO = BI.BAKERY_NO 
JOIN REVIEW r ON R.BAKERY_NO = BI.BAKERY_NO 
JOIN BAKERY_IMAGE bi2 ON bi2.BAKERY_NO = BI.BAKERY_NO 
GROUP BY 
    bi.BAKERY_NAME, bi.BAKERY_ADDRESS, m.MENU_NAME, 
    TO_CHAR(m.MENU_INFO),  
    BI2.RESOURCES_PATH, BI2.IMG_NO, BI2.CHANGE_NAME
ORDER BY review_rating DESC
FETCH FIRST 10 ROWS ONLY
  
</select>

<select id="getRecentBakeries" resultMap="BakeryResultMap">

SELECT bi.BAKERY_NAME, 
bi.BAKERY_ADDRESS,
bd.CREATED_DATE ,
m.MENU_NAME ,
BI2.IMG_NO ,
BI2.RESOURCES_PATH ,
BI2.CHANGE_NAME 
FROM BAKERY_INFO bi 
JOIN BAKERY_DETAIL bd 
ON bi.BAKERY_NO = bd.BAKERY_NO 
JOIN MENU m 
ON m.BAKERY_NO= bi.BAKERY_NO 
JOIN BAKERY_IMAGE bi2 
ON bi2.BAKERY_NO = bi.BAKERY_NO
GROUP BY bi.BAKERY_NAME ,bi.BAKERY_ADDRESS 
,bd.CREATED_DATE ,m.MENU_NAME ,
BI2.IMG_NO ,BI2.RESOURCES_PATH ,
BI2.CHANGE_NAME 
ORDER BY bd.CREATED_DATE ASC 
FETCH FIRST 10 ROWS ONLY


</select>

<select id="getTopFiveOrders" resultMap="BakeryResultMap">

SELECT
 mc.CATEGORY_NO ,
 SUM(ci.MENU_COUNT) AS totalOrders
FROM BAKERY_INFO bi 
JOIN MENU m 
ON m.BAKERY_NO = BI.BAKERY_NO 
JOIN CART_INFO ci 
ON m.MENU_NO  = ci.MENU_NO
JOIN MENU_CATEGORY mc 
ON mc.CATEGORY_NO = m.CATEGORY_NO 
GROUP BY mc.CATEGORY_NO 
ORDER BY totalOrders DESC 
FETCH FIRST 5 ROWS ONLY

</select>


<select id="getCategoryBakeries" resultMap="BakeryResultMap">
    SELECT 
        mc.CATEGORY,
        COUNT(DISTINCT bi.BAKERY_NO) AS bakery_count
    FROM MENU_CATEGORY mc
    JOIN MENU m ON mc.CATEGORY_NO = m.CATEGORY_NO
    JOIN CART_INFO ci ON m.MENU_NO = ci.MENU_NO
    JOIN BAKERY_INFO bi ON bi.BAKERY_NO = m.BAKERY_NO
    WHERE mc.CATEGORY IN (MC.CATEGORY)
    GROUP BY mc.CATEGORY
    ORDER BY bakery_count DESC
</select>












</mapper>
