<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" 
						"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">
<mapper namespace="kr.kro.bbanggil.owner.order.mapper.OrderMapper">
	
	<resultMap id="orderResultMap" type="kr.kro.bbanggil.owner.order.dto.response.OrderResponseDto">
		<result property="bakeryName" column="BAKERY_NAME"></result>
		<result property="menuPrice" column="MENU_PRICE"></result>
		<result property="menuName" column="MENU_NAME"></result>
		<result property="menuCount" column="MENU_COUNT"></result>
		<result property="resourcesPath" column="RESOURCES_PATH"></result>
		<result property="changeName" column="CHANGE_NAME"></result>
		<result property="payNo" column="pay_no"></result>
		<result property="paymentCode" column="merchant_uid"></result>
		<result property="userName" column="user_name"></result>
		<result property="status" column="status"></result>
		<result property="paymentDate" column="pay_request_date"></result>
		<result property="amount" column="amount"></result>
	</resultMap>
	
	<resultMap id="successResultMap" type="kr.kro.bbanggil.owner.order.dto.response.PaymentResponseDto">
		<result property="merchantUid" column="MERCHANT_UID"></result>
		<result property="impUid" column="IMP"></result>
		<result property="account" column="AMOUNT"></result>
		<result property="status" column="STAUTS"></result>
		<result property="recipientsName" column="RECIPIENTS_NAME"></result>
		<result property="recipientsPhoneNum" column="RECIPIENTS_PHONENUM"></result>
		<result property="requestContent" column="REQUEST_CONTENT"></result>
	</resultMap>	
	
	<resultMap id="pickupResultMap" type="kr.kro.bbanggil.owner.order.dto.response.PickupCheckResponseDto">
		<result property="pickupStatusNo" column="PICKUP_STATUS_NO"></result>
		<result property="pickupStatus" column="PICKUP_STATUS"></result>
		<result property="refusalDetail" column="REFUSAL_DETAIL"></result>
	</resultMap>
	
	<select id="list" resultMap="orderResultMap">
		SELECT BI.BAKERY_NAME, M.MENU_NAME, M.MENU_PRICE, CI.MENU_COUNT,
		       mi.RESOURCES_PATH, mi.CHANGE_NAME
		FROM CART_INFO ci 
		JOIN CART c ON ci.CART_NO = c.CART_NO
		JOIN MENU m ON ci.MENU_NO = m.MENU_NO
		JOIN BAKERY_INFO bi ON BI.BAKERY_NO = M.BAKERY_NO
		JOIN MENU_IMEGE mi ON m.MENU_NO = mi.MENU_NO 
		WHERE c.CART_NO = (SELECT max(cart_no) FROM CART c 
						   WHERE USER_NO = #{userNo})
		ORDER BY ci.LIST_NO DESC

		<!-- SELECT BI.BAKERY_NAME, M.MENU_NAME, M.MENU_PRICE, CI.MENU_COUNT
		FROM CART_INFO ci 
		JOIN CART c ON ci.CART_NO = c.CART_NO
		JOIN ORDER_INFO oi ON OI.CART_NO = c.CART_NO 
		JOIN MENU m ON ci.MENU_NO = m.MENU_NO
		JOIN BAKERY_INFO bi ON BI.BAKERY_NO = M.BAKERY_NO
		WHERE oi.CART_NO = (SELECT max(oi.cart_no) FROM ORDER_INFO oi
						    JOIN cart c ON oi.CART_NO = c.CART_NO 
					        WHERE user_no = #{userNo})
		ORDER BY oi.pay_no DESC -->
	</select>
	
	<select id="calculate" resultType="int">
		SELECT SUM(M.MENU_PRICE * CI.MENU_COUNT) AS TOTAL_SUM
		FROM CART_INFO ci 
		JOIN CART c ON ci.CART_NO = c.CART_NO
		JOIN MENU m ON ci.MENU_NO = m.MENU_NO
		JOIN BAKERY_INFO bi ON BI.BAKERY_NO = M.BAKERY_NO
		WHERE C.USER_NO = #{userNo}
		AND c.CART_NO = (SELECT max(cart_no) FROM CART c 
						 WHERE USER_NO = #{userNo})
		<!-- SELECT SUM(M.MENU_PRICE * CI.MENU_COUNT) AS TOTAL_SUM FROM CART_INFO ci 
		JOIN CART c ON ci.CART_NO = c.CART_NO
		JOIN MENU m ON ci.MENU_NO = m.MENU_NO
		JOIN BAKERY_INFO bi ON BI.BAKERY_NO = M.BAKERY_NO 
		WHERE C.USER_NO = 1 AND C.CART_NO = 1	 -->		
	</select>
	
	<insert id="save" parameterType="kr.kro.bbanggil.owner.order.dto.response.PaymentResponseDto">
		INSERT INTO PAYMENT VALUES(PAYMENT_SEQ.NEXTVAL,
						   		   #{merchantUid},
						   		   #{impUid},
						   		   #{account},
						   		   #{status},
						   		   SYSDATE,
						   		   #{recipientsName},
						   		   #{recipientsPhoneNum},
						   		   #{requestContent})
	</insert>
	
	<select id="findcart" resultType="int">
		SELECT CART_NO FROM CART c
		WHERE USER_NO = #{userNo}
		ORDER BY cart_no DESC 
		FETCH FIRST 1 ROWS ONLY
	</select>
		
	<select id="findpay" resultType="int">
		SELECT p.PAY_NO FROM PAYMENT p 
		WHERE p.MERCHANT_UID = #{merchantUid}
	</select>	
	
	<insert id="orderInfo">
		INSERT INTO ORDER_INFO VALUES(ORDER_INFO_SEQ.NEXTVAL,
							  		  #{cartNo},
							   		  #{payNo})				   		   
	</insert>
	
	<insert id="pickupCheck">
		INSERT INTO PICKUP_STATUS VALUES(PICKUP_STATUS_SEQ.NEXTVAL,
										 #{payNo},
										 DEFAULT,
										 DEFAULT,
										 CURRENT_TIMESTAMP)
	</insert>
	
	<select id="pickupPay" resultType="int">
		SELECT PAY_NO
		FROM (
		    SELECT oi.PAY_NO
		    FROM CART_INFO ci
		    JOIN CART c ON ci.CART_NO = c.CART_NO
		    JOIN ORDER_INFO oi ON oi.CART_NO = c.CART_NO
		    WHERE c.USER_NO = #{userNo}
		    ORDER BY oi.PAY_NO DESC
		)
		WHERE ROWNUM = 1
	</select>
	
	<select id="pickupStatus" resultMap="pickupResultMap">
		SELECT PICKUP_STATUS_NO, PICKUP_STATUS, REFUSAL_DETAIL FROM PICKUP_STATUS ps 
		WHERE PAY_NO = #{payNo}				
	</select>
	
	<select id="refund">
		SELECT IMP FROM PAYMENT WHERE PAY_NO = #{payNo}
	</select> 
	
	
	<select id="countByUserAndOrder">
    SELECT COUNT(*)
    FROM CART c
    JOIN ORDER_INFO oi ON c.CART_NO = oi.CART_NO
    JOIN USER_INFO ui ON c.USER_NO = ui.USER_NO
    WHERE ui.USER_NO = #{userNo}
      AND oi.ORDER_NO = #{orderNo}
	</select>
	
	
<select id="selectOrderCount" resultType="int" parameterType="String">
  SELECT COUNT(DISTINCT oi.ORDER_NO)
  FROM PAYMENT p
  JOIN ORDER_INFO oi ON p.PAY_NO = oi.PAY_NO
  JOIN REVIEW r ON r.ORDER_NO = oi.ORDER_NO
  JOIN USER_INFO ui ON r.USER_NO = ui.USER_NO
  JOIN BAKERY_INFO bi ON bi.BAKERY_NO = r.BAKERY_NO
  WHERE 1=1
  <if test="keyword != null and keyword != ''">
    AND (
      LOWER(ui.USER_NAME) LIKE '%' || LOWER(#{keyword}) || '%'
      OR LOWER(p.MERCHANT_UID) LIKE '%' || LOWER(#{keyword}) || '%'
    )
  </if>
</select>
	
<select id="selectPagedOrders" resultMap="orderResultMap" parameterType="map">
  SELECT *
  FROM (
    SELECT
      ROW_NUMBER() OVER (ORDER BY p.PAY_REQUEST_DATE DESC) AS rn,
      p.PAY_NO,
      p.MERCHANT_UID,
      p.AMOUNT,
      p.STATUS,
      p.PAY_REQUEST_DATE,
      ui.USER_NAME,
      bi.BAKERY_NAME
    FROM PAYMENT p
    JOIN ORDER_INFO oi ON p.PAY_NO = oi.PAY_NO
    JOIN REVIEW r ON r.ORDER_NO = oi.ORDER_NO
    JOIN USER_INFO ui ON r.USER_NO = ui.USER_NO
    JOIN BAKERY_INFO bi ON bi.BAKERY_NO = r.BAKERY_NO
    WHERE 1=1
    <if test="keyword != null and keyword != ''">
      AND (
        LOWER(ui.USER_NAME) LIKE '%' || LOWER(#{keyword}) || '%'
        OR LOWER(p.MERCHANT_UID) LIKE '%' || LOWER(#{keyword}) || '%'
      )
    </if>
  )
  WHERE rn BETWEEN #{pi.offset} AND #{pi.limit}
</select>
	
	<select id="findRecentOrder" resultType="kr.kro.bbanggil.user.bakery.dto.response.BakeryResponseDto">
	
	SELECT
	oi.ORDER_NO AS orderNo
FROM
	ORDER_INFO oi
JOIN PAYMENT p 
ON
	oi.PAY_NO = p.PAY_NO
JOIN CART c 
ON
	c.CART_NO = oi.CART_NO
JOIN USER_INFO ui 
ON
	ui.USER_NO = c.USER_NO
JOIN CART_INFO ci 
ON
	ci.CART_NO = c.CART_NO
JOIN MENU m 
ON
	m.MENU_NO = ci.MENU_NO
JOIN BAKERY_INFO bi 
ON
	bi.BAKERY_NO = m.BAKERY_NO
WHERE
	ui.USER_NO = #{userNo}
	AND bi.BAKERY_NO = #{bakeryNo}
	ORDER BY oi.ORDER_NO DESC
FETCH FIRST 1 ROWS ONLY
	
	
	</select>
	
	
	
</mapper>